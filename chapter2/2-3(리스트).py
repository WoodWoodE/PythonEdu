# 리스트 자료형
# 리스트란 해야할 일 같은 개념이다.
# 변수를 여러개 넣어둔 개념이다.

# 리스트의 생성법
odd = [1, 3, 5, 7, 9]
print(type(odd))

# 다른 언어와 다른점은 타임을 다중으로 넣을 수 있는 것이다. 속도면에 비효율
e = [1, 2, "Life", "is"]

#그리고 List안에 List를 넣을 수 있다.
e = [1, 2, ["Life", "is"]]

#리스트의 인덱싱 - string이랑 거의 동일함
a = [1, 2, 3]
print(a[1])

print(a[1] + a[2]) # String일때는 23이 나오는데 숫자형이기에 5가 나옴

#-를 넣으면 거꾸로 불러옴
print(a[-1])
print(a[-1] + a[-2])

# 만약 리스트 내부에 리스트가 또 존재할 경우
a = [1, 2, 3, ['a', 'b', 'c']]
print(a[3])
print(a[3][1]) # 리스트 내부의 리스트의 인덱싱

# 이런경우가 매우 많다고함

#동일하게 -로도 가능하다.
print(a[-1][-1]) # 리스트 내부의 리스트의 인덱싱
print(a[-1][2]) # 리스트 내부의 리스트의 인덱싱

# 내부 리스트가 아닌 경우는 문자열일때를 제외하곤 에러를 출력한다.
a = [1, 'hello', 3, ['a', 'b', 'c']]
# print(a[2][2]); - 에러 

# 문자열은 문자 열이기 때문에 출력이 된다.
print(a[1][1]);

# 슬라이싱 - 문자열과 거의 동일함..
a = [1, 2, 3, 4, 5]
print(a[0:2]) # 0번째 인덱스부터 2번째 인덱스 미만까지를 보여줘라 
print(a[::2]) # 0번째 인덱스부터 끝까지 두칸씩 보여줘라 


# 중첩된 리스트에서 슬라이싱하기 
a = [1, 2, 3, ["a", "b", "c"], 4, 5]
print(a[2:5])
print(a[3][:1])
print(a[3][::2])

# 리스트 연산하기

# - 리스트 더하기
a = [1, 2, 3]
b = [4, 5, 6]

print(a + b) # 두개의 리스트를 합치는 기능을 함

# - 리스트 곱하기
print(a * 2)
#print(a * '3') 숫자를 제외하고는 연산할 수 없다.

# - 리스트 길이 구하기(len())
a = [1, 2, 3, 4, 5, 6]
print(len(a))

# ** 숫자와 문자를 사칙연산 할 수 없다(곱셈제외)
a = [1, 2, 3]
#print(3 + 'hi') #-에러 
print(str(3)+'hi') # 형변환을 통해 사용하는 것은 문제 없음

#but 곱셈은 가능, 이는 반복의 표현이라서 그럼
print(3 * 'hi')

# 리스트의 수정과 삭제

# 리스트의 값 수정하기
a = [1, 2, 3]
a[2] = 4
print(a)

# del 함수를 사용해 리스트 요소 삭제하기 - del arr[idx] : arr배열의 idx번째 요소 삭제
a = [1, 2, 3]
del a[1]
print(a)

# 슬라이싱 사용해서 삭제
a = [1, 2, 3, 4, 5]
del a[:2]
print(a)

# - 리스트에 요소 추가하기 - append()
a = [1, 2, 3]
a.append(4)
print(a)

# 리스트에 리스트 추가도 가능
a = [1, 2, 3]
a.append([4, 5])
print(a) 

# - 리스트의 정렬 - sort()
#- 숫자
a = [2, 4, 1, 5, 3]
a.sort()
print(a)

#- 문자
a = ['z', 'b', 'a', 'c']
a.sort()
print(a)

#- 그럼 문자열은? - 문자열에선 sort함수가 적용되어 있지 않은듯.. 사용되지 않음
# a = 'zbac'
# a.sort()
# print(a)

# 리스트 뒤집기(반대로 정렬하지는 않음) - reverse()
a = ['a', 'c', 'b']
a.reverse()
print(a)

# 그럼 sort()를 하고 리스트를 뒤집으면 - 반대로 정렬 
a = ['a', 'c', 'b']
a.sort()
a.reverse()
print(a)

# 인덱스 반환 - index(찾을 문자) - 0부터 시작한 index를 반환함
# 없는 값을 사용하면 error
a = [1, 2, 3, 4, 5]
print(a.index(2))

# 리스트에 요소 삽입 - insert(삽입할 위치, 삽입할 문자)
a = [1, 2, 4, 5]
a.insert(2, 3)
print(a)

# 리스트 요소 제거 - remove(삭제할 문자) 가장 첫번째 찾은 문자만 제거한다(다중 제거 불가능).
a = [1, 2, 3, 4, 3, 5]
a.remove(3)
print(a)

# 리스트 요소 끄집어 내기 - pop() - 가장 마지막 요소를 반환하고 본 배열에서 제거한다.
a = [1, 2, 3]
print(a.pop())
print(a)

# 리스트에 포함된 요소의 x의 갯수 세기 - count(갯수를 셀 문자)
a = [1, 2, 3, 2, 4, 2]
print(a.count(2))


# append와 +의 차이는 별로 없다
a = [1, 2, 3] + [4] # => append()랑 동일한 사용법임
print(a)

a = [1, 2, 3]
a += [4]
print(a)

# 리스트의 확장 - extend(x) - append와 거의 비슷함, 그러나 이건 배열일때 의미가 있음
# append()는 배열을 넣을 경우 배열 자체가 들어가는데 
# extend()는 배열을 넣을 경우 배열이 펼쳐져서 들어간다 

#append([배열])
a = [1, 2, 3, 4]
a.append([5, 6])
print(a)

#extend([배열])
a = [1, 2 ,3 ,4]
a.extend([5, 6])
print(a)

